(()=>{"use strict";var n={265:function(n,e,t){var o,r=this&&this.__createBinding||(Object.create?function(n,e,t,o){void 0===o&&(o=t);var r=Object.getOwnPropertyDescriptor(e,t);r&&!("get"in r?!e.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,o,r)}:function(n,e,t,o){void 0===o&&(o=t),n[o]=e[t]}),i=this&&this.__setModuleDefault||(Object.create?function(n,e){Object.defineProperty(n,"default",{enumerable:!0,value:e})}:function(n,e){n.default=e}),a=this&&this.__importStar||(o=function(n){return o=Object.getOwnPropertyNames||function(n){var e=[];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[e.length]=t);return e},o(n)},function(n){if(n&&n.__esModule)return n;var e={};if(null!=n)for(var t=o(n),a=0;a<t.length;a++)"default"!==t[a]&&r(e,n,t[a]);return i(e,n),e});Object.defineProperty(e,"__esModule",{value:!0}),e.activate=function(n){n.subscriptions.push(d.commands.registerCommand("codeRunner.openPanel",()=>{const n=d.window.createWebviewPanel("codeRunner","Code Runner",d.ViewColumn.One,{enableScripts:!0,retainContextWhenHidden:!0}),e=d.window.activeTextEditor;let t="",o="cpp";if(e){t=e.document.getText();const n=e.document.fileName;n.endsWith(".cpp")||n.endsWith(".c")?o="cpp":n.endsWith(".py")?o="python":n.endsWith(".c")&&(o="c")}n.webview.html=function(n,e){return`\n    <!DOCTYPE html>\n    <html lang="en">\n    <head>\n        <meta charset="UTF-8" />\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <title>Code Runner</title>\n        <style>\n            * {\n                box-sizing: border-box;\n                margin: 0;\n                padding: 0;\n            }\n            \n            body {\n                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;\n                background: #fafbfc;\n                color: #24292f;\n                min-height: 100vh;\n                display: flex;\n                flex-direction: column;\n                line-height: 1.5;\n            }\n            \n            .header {\n                background: #ffffff;\n                border-bottom: 1px solid #d0d7de;\n                padding: 20px 32px;\n            }\n            \n            .header h1 {\n                font-size: 20px;\n                font-weight: 600;\n                color: #24292f;\n                display: flex;\n                align-items: center;\n                gap: 12px;\n            }\n            \n            .logo {\n                width: 24px;\n                height: 24px;\n                background: #24292f;\n                border-radius: 4px;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                color: white;\n                font-size: 12px;\n                font-weight: 700;\n            }\n            \n            .container {\n                flex: 1;\n                max-width: 800px;\n                width: 100%;\n                margin: 0 auto;\n                padding: 32px;\n                display: flex;\n                flex-direction: column;\n                gap: 24px;\n            }\n            \n            .controls {\n                background: #ffffff;\n                border: 1px solid #d0d7de;\n                border-radius: 8px;\n                padding: 24px;\n            }\n            \n            .control-grid {\n                display: grid;\n                grid-template-columns: 1fr 140px 100px;\n                gap: 16px;\n                align-items: end;\n            }\n            \n            .field {\n                display: flex;\n                flex-direction: column;\n                gap: 6px;\n            }\n            \n            .label {\n                font-size: 13px;\n                font-weight: 500;\n                color: #656d76;\n            }\n            \n            .input, .select {\n                height: 40px;\n                padding: 8px 12px;\n                border: 1px solid #d0d7de;\n                border-radius: 6px;\n                font-size: 14px;\n                background: #ffffff;\n                color: #24292f;\n                transition: border-color 0.2s ease;\n                outline: none;\n                font-family: ui-monospace, 'SF Mono', Monaco, 'Cascadia Code', monospace;\n            }\n            \n            .input:focus, .select:focus {\n                border-color: #0969da;\n                box-shadow: inset 0 0 0 1px #0969da;\n            }\n            \n            .run-button {\n                height: 40px;\n                background: #1f883d;\n                color: #ffffff;\n                border: none;\n                border-radius: 6px;\n                font-size: 14px;\n                font-weight: 500;\n                cursor: pointer;\n                transition: background-color 0.2s ease;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                gap: 6px;\n                padding: 0 16px;\n            }\n            \n            .run-button:hover {\n                background: #1a7f37;\n            }\n            \n            .run-button:active {\n                background: #166f2c;\n            }\n            \n            .output-section {\n                flex: 1;\n                background: #ffffff;\n                border: 1px solid #d0d7de;\n                border-radius: 8px;\n                display: flex;\n                flex-direction: column;\n                min-height: 400px;\n            }\n            \n            .output-header {\n                padding: 16px 20px;\n                border-bottom: 1px solid #d0d7de;\n                background: #f6f8fa;\n                border-radius: 8px 8px 0 0;\n            }\n            \n            .output-title {\n                font-size: 14px;\n                font-weight: 600;\n                color: #24292f;\n            }\n            \n            .output-content {\n                flex: 1;\n                padding: 20px;\n                font-family: ui-monospace, 'SF Mono', Monaco, 'Cascadia Code', monospace;\n                font-size: 13px;\n                line-height: 1.6;\n                color: #24292f;\n                background: #ffffff;\n                white-space: pre-wrap;\n                word-wrap: break-word;\n                overflow-y: auto;\n                border-radius: 0 0 8px 8px;\n            }\n            \n            .output-content:empty::before {\n                content: 'Run your code to see output here...';\n                color: #8c959f;\n                font-style: italic;\n            }\n            \n            .play-icon {\n                width: 0;\n                height: 0;\n                border-left: 6px solid currentColor;\n                border-top: 4px solid transparent;\n                border-bottom: 4px solid transparent;\n                margin-left: 1px;\n            }\n            \n            @media (max-width: 640px) {\n                .container {\n                    padding: 20px 16px;\n                }\n                \n                .control-grid {\n                    grid-template-columns: 1fr;\n                    gap: 16px;\n                }\n                \n                .controls {\n                    padding: 20px;\n                }\n                \n                .header {\n                    padding: 16px 20px;\n                }\n            }\n        </style>\n    </head>\n    <body>\n        <div class="header">\n            <h1>\n                <div class="logo">CR</div>\n                Code Runner\n            </h1>\n        </div>\n        \n        <div class="container">\n            <div class="controls">\n                <div class="control-grid">\n                    <div class="field">\n                        <label class="label">File Name</label>\n                        <input type="text" class="input" id="fileName" placeholder="main.cpp" value="${"cpp"===e?"main.cpp":"c"===e?"main.c":"main.py"}" />\n                    </div>\n                    <div class="field">\n                        <label class="label">Language</label>\n                        <select class="select" id="language">\n                            <option value="cpp" ${"cpp"===e?"selected":""}>C++</option>\n                            <option value="c" ${"c"===e?"selected":""}>C</option>\n                            <option value="python" ${"python"===e?"selected":""}>Python</option>\n                        </select>\n                    </div>\n                    <button class="run-button" onclick="runCode()">\n                        <div class="play-icon"></div>\n                        Run\n                    </button>\n                </div>\n            </div>\n            \n            <div class="output-section">\n                <div class="output-header">\n                    <div class="output-title">Output</div>\n                </div>\n                <div class="output-content" id="output"></div>\n            </div>\n        </div>\n\n        <script>\n            const vscode = acquireVsCodeApi();\n\n            document.getElementById('language').addEventListener('change', (event) => {\n                const language = event.target.value;\n                const fileNameInput = document.getElementById('fileName');\n                if (language === 'cpp') {\n                    fileNameInput.value = 'main.cpp';\n                } else if (language === 'c') {\n                    fileNameInput.value = 'main.c';\n                } else if (language === 'python') {\n                    fileNameInput.value = 'main.py';\n                }\n            });\n\n            function runCode() {\n                const fileName = document.getElementById("fileName").value;\n                const language = document.getElementById("language").value;\n                \n                if (!fileName.trim()) {\n                    document.getElementById("output").textContent = "❌ Please enter a file name.";\n                    return;\n                }\n                \n                document.getElementById("output").textContent = "⏳ Running code...";\n                vscode.postMessage({ command: "runCode", code: "", language, fileName });\n            }\n\n            window.addEventListener("message", (event) => {\n                const message = event.data;\n                if (message.command === "showOutput") {\n                    document.getElementById("output").textContent = message.output;\n                }\n            });\n        <\/script>\n    </body>\n    </html>\n  `}(0,o),n.webview.onDidReceiveMessage(async e=>{if("runCode"===e.command){e.code;const t=e.language,o=e.fileName;if(!o)return void n.webview.postMessage({command:"showOutput",output:"❌ Error: Please enter a file name (e.g., main.cpp)."});n.webview.postMessage({command:"showOutput",output:"Running code..."});try{const e=await async function(n,e,t){const o=c.join(p.tmpdir(),"vscode-code-runner-temp");l.existsSync(o)||l.mkdirSync(o,{recursive:!0});const r=c.join(o,t),i=d.workspace.workspaceFolders;if(!i)throw new Error("No workspace folder is open. Please open a folder containing your code files.");const a=c.join(i[0].uri.fsPath,t);if(!l.existsSync(a))throw new Error(`File "${t}" not found in workspace. Please ensure the file exists in your workspace folder.`);const u=l.readFileSync(a,"utf8");return l.writeFileSync(r,u),new Promise((e,i)=>{let a;if("cpp"===n||"c"===n){const u=c.join(o,c.parse(t).name+("win32"===p.platform()?".exe":""));a="cpp"===n?"g++":"gcc";const f=`${a} "${r}" -o "${u}"`;s.exec(f,{cwd:o},(n,t,a)=>{if(n)return l.unlinkSync(r),i(new Error(`Compilation failed:\n${a||t||n.message}`));const c="win32"===p.platform()?`"${u}"`:u,f=s.spawn(c,[],{cwd:o,shell:!0});let g="";f.stdout.on("data",async n=>{if(g+=n.toString(),g.toLowerCase().includes("enter")||g.includes("?")){const n=await d.window.showInputBox({prompt:"Program needs input:",placeHolder:"Type your input here..."});void 0!==n?f.stdin.write(n+"\n"):f.kill()}}),f.stderr.on("data",n=>{g+=n.toString()}),f.on("close",n=>{try{l.unlinkSync(r),l.existsSync(u)&&l.unlinkSync(u)}catch(n){console.error("Cleanup error:",n)}if(0!==n)return i(new Error(`Program exited with code ${n}:\n${g}`));e(g)}),f.on("error",n=>{i(new Error(`Failed to run program: ${n.message}`))})})}else if("python"===n){a="python";const n=s.spawn(a,[r],{cwd:o,shell:!0});let t="";n.stdout.on("data",async e=>{if(t+=e.toString(),t.toLowerCase().includes("enter")||t.includes("?")){const e=await d.window.showInputBox({prompt:"Program needs input:",placeHolder:"Type your input here..."});void 0!==e?n.stdin.write(e+"\n"):n.kill()}}),n.stderr.on("data",n=>{t+=n.toString()}),n.on("close",n=>{try{l.unlinkSync(r)}catch(n){console.error("Cleanup error:",n)}if(0!==n)return i(new Error(`Program exited with code ${n}:\n${t}`));e(t)}),n.on("error",n=>{i(new Error(`Failed to run program: ${n.message}`))})}else e("Language not supported.")})}(t,0,o);n.webview.postMessage({command:"showOutput",output:e})}catch(e){n.webview.postMessage({command:"showOutput",output:"❌ Error: "+(e.message||e.toString())})}}})}))},e.deactivate=function(){const n=c.join(p.tmpdir(),"vscode-code-runner-temp");if(l.existsSync(n))try{l.rmSync(n,{recursive:!0,force:!0})}catch(n){console.error("Failed to clean up temporary directory:",n)}};const d=a(t(398)),s=a(t(317)),c=a(t(928)),l=a(t(896)),p=a(t(857))},317:n=>{n.exports=require("child_process")},398:n=>{n.exports=require("vscode")},857:n=>{n.exports=require("os")},896:n=>{n.exports=require("fs")},928:n=>{n.exports=require("path")}},e={},t=function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={exports:{}};return n[o].call(i.exports,i,i.exports,t),i.exports}(265);module.exports=t})();
//# sourceMappingURL=extension.js.map